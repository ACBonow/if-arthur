{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Arthur Financial Institution API",
		"description": "Collection completa para testar todos os endpoints da Instituição Financeira Arthur - Open Finance Fase 2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Status",
			"item": [
				{
					"name": "API Status (Root)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/",
							"host": [
								"{{base_url}}"
							],
							"path": [
								""
							]
						},
						"description": "Verifica o status da API e retorna informações sobre endpoints disponíveis"
					},
					"response": []
				},
				{
					"name": "API Status (/api)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{base_url}}/api",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api"
							]
						},
						"description": "Verifica o status da API através do endpoint /api"
					},
					"response": []
				}
			],
			"description": "Endpoints para verificar o status e disponibilidade da API"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Criar Cliente (com consentimento)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salvar customerId retornado para uso em outras requisições",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('customer_id', response._id);",
									"    console.log('Customer ID salvo:', response._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Maria Silva\",\n  \"cpf\": \"12345678900\",\n  \"email\": \"maria.silva@email.com\",\n  \"consentGiven\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Cria um novo cliente com consentimento ativo para compartilhamento de dados (Open Finance)"
					},
					"response": []
				},
				{
					"name": "Criar Cliente (sem consentimento)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"João Santos\",\n  \"cpf\": \"98765432100\",\n  \"email\": \"joao.santos@email.com\",\n  \"consentGiven\": false\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Cria um novo cliente SEM consentimento para compartilhamento de dados"
					},
					"response": []
				},
				{
					"name": "Criar Cliente (CPF duplicado - Erro)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Maria Silva Clone\",\n  \"cpf\": \"12345678900\",\n  \"email\": \"maria.clone@email.com\",\n  \"consentGiven\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Tenta criar cliente com CPF já existente - deve retornar erro 409"
					},
					"response": []
				}
			],
			"description": "Endpoints para gerenciar clientes da instituição financeira"
		},
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Criar Conta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salvar accountId retornado para uso em outras requisições",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('account_id', response._id);",
									"    console.log('Account ID salvo:', response._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customer_id}}\",\n  \"type\": \"CONTA_CORRENTE\",\n  \"branch\": \"0001\",\n  \"number\": \"123456-7\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Cria uma nova conta bancária para um cliente existente"
					},
					"response": []
				},
				{
					"name": "Criar Conta Poupança",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{customer_id}}\",\n  \"type\": \"CONTA_POUPANCA\",\n  \"branch\": \"0001\",\n  \"number\": \"789012-3\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Cria uma conta poupança para um cliente existente"
					},
					"response": []
				},
				{
					"name": "Consultar Saldo (com consentimento)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "{{customer_id}}",
								"type": "text",
								"description": "ID do cliente que autorizou o acesso"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}/balance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{account_id}}",
								"balance"
							]
						},
						"description": "Consulta o saldo de uma conta. Requer header x-customer-id com cliente que deu consentimento."
					},
					"response": []
				},
				{
					"name": "Consultar Saldo (sem consentimento - Erro)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/accounts/{{account_id}}/balance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{account_id}}",
								"balance"
							]
						},
						"description": "Tenta consultar saldo sem fornecer x-customer-id - deve retornar erro 401"
					},
					"response": []
				}
			],
			"description": "Endpoints para gerenciar contas bancárias"
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Realizar Crédito (Depósito)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Salvar transactionId se necessário",
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('last_transaction_id', response._id);",
									"    console.log('Transaction ID salvo:', response._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{account_id}}\",\n  \"description\": \"Depósito inicial\",\n  \"amount\": 1000.00,\n  \"type\": \"credit\",\n  \"category\": \"Depósito\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Realiza uma transação de crédito (depósito) em uma conta"
					},
					"response": []
				},
				{
					"name": "Realizar Débito (Saque)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{account_id}}\",\n  \"description\": \"Saque no caixa eletrônico\",\n  \"amount\": 200.00,\n  \"type\": \"debit\",\n  \"category\": \"Saque\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Realiza uma transação de débito (saque) em uma conta"
					},
					"response": []
				},
				{
					"name": "Pagamento de Conta",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{account_id}}\",\n  \"description\": \"Pagamento de conta de luz\",\n  \"amount\": 150.50,\n  \"type\": \"debit\",\n  \"category\": \"Pagamento\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Realiza um pagamento de conta"
					},
					"response": []
				},
				{
					"name": "Transferência Recebida",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{account_id}}\",\n  \"description\": \"Transferência recebida de João\",\n  \"amount\": 500.00,\n  \"type\": \"credit\",\n  \"category\": \"Transferência\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Registra uma transferência recebida (crédito)"
					},
					"response": []
				},
				{
					"name": "Débito com Saldo Insuficiente (Erro)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{account_id}}\",\n  \"description\": \"Tentativa de saque maior que o saldo\",\n  \"amount\": 999999.00,\n  \"type\": \"debit\",\n  \"category\": \"Saque\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Tenta realizar débito maior que o saldo disponível - deve retornar erro 400"
					},
					"response": []
				},
				{
					"name": "Listar Transações (Extrato)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "{{customer_id}}",
								"type": "text",
								"description": "ID do cliente que autorizou o acesso"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/{{account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{account_id}}"
							]
						},
						"description": "Lista todas as transações de uma conta (extrato). Requer header x-customer-id com cliente que deu consentimento."
					},
					"response": []
				},
				{
					"name": "Listar Transações (sem consentimento - Erro)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/transactions/{{account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{account_id}}"
							]
						},
						"description": "Tenta listar transações sem fornecer x-customer-id - deve retornar erro 401"
					},
					"response": []
				}
			],
			"description": "Endpoints para gerenciar transações financeiras (créditos e débitos)"
		},
		{
			"name": "Fluxo Completo",
			"item": [
				{
					"name": "1. Criar Cliente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('flow_customer_id', response._id);",
									"    console.log('✅ Cliente criado:', response._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Carlos Oliveira\",\n  \"cpf\": \"11122233344\",\n  \"email\": \"carlos.oliveira@email.com\",\n  \"consentGiven\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/customers",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"customers"
							]
						},
						"description": "Passo 1: Criar um novo cliente com consentimento"
					},
					"response": []
				},
				{
					"name": "2. Criar Conta",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('flow_account_id', response._id);",
									"    console.log('✅ Conta criada:', response._id);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"customerId\": \"{{flow_customer_id}}\",\n  \"type\": \"CONTA_CORRENTE\",\n  \"branch\": \"0001\",\n  \"number\": \"555555-0\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts"
							]
						},
						"description": "Passo 2: Criar conta para o cliente"
					},
					"response": []
				},
				{
					"name": "3. Consultar Saldo Inicial",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    console.log('✅ Saldo inicial:', response.balance);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "{{flow_customer_id}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/{{flow_account_id}}/balance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{flow_account_id}}",
								"balance"
							]
						},
						"description": "Passo 3: Verificar saldo inicial (deve ser 0)"
					},
					"response": []
				},
				{
					"name": "4. Fazer Depósito",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    console.log('✅ Depósito realizado');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{flow_account_id}}\",\n  \"description\": \"Depósito inicial\",\n  \"amount\": 5000.00,\n  \"type\": \"credit\",\n  \"category\": \"Depósito\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Passo 4: Realizar depósito de R$ 5000"
					},
					"response": []
				},
				{
					"name": "5. Fazer Compras",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    console.log('✅ Compra realizada');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountId\": \"{{flow_account_id}}\",\n  \"description\": \"Compra no supermercado\",\n  \"amount\": 350.75,\n  \"type\": \"debit\",\n  \"category\": \"Compra\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/transactions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions"
							]
						},
						"description": "Passo 5: Realizar compra no supermercado"
					},
					"response": []
				},
				{
					"name": "6. Consultar Saldo Atualizado",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    console.log('✅ Saldo atualizado:', response.balance);",
									"    console.log('   Esperado: R$ 4649.25 (5000 - 350.75)');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "{{flow_customer_id}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/accounts/{{flow_account_id}}/balance",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"accounts",
								"{{flow_account_id}}",
								"balance"
							]
						},
						"description": "Passo 6: Verificar saldo após transações"
					},
					"response": []
				},
				{
					"name": "7. Ver Extrato Completo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    console.log('✅ Extrato obtido com', response.length, 'transações');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "x-customer-id",
								"value": "{{flow_customer_id}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/transactions/{{flow_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"transactions",
								"{{flow_account_id}}"
							]
						},
						"description": "Passo 7: Consultar extrato completo da conta"
					},
					"response": []
				}
			],
			"description": "Fluxo completo de teste: criar cliente → criar conta → depositar → fazer compra → consultar extrato"
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "default"
		}
	]
}
